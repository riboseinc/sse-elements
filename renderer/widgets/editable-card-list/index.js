import React from 'react';
import { Card, Text, Button } from '@blueprintjs/core';
import styles from './styles.scss';
export const AddCardTrigger = function ({ onClick }) {
    return (React.createElement("div", { className: styles.addCardTriggerContainer },
        React.createElement(AddCardTriggerButton, { onClick: onClick })));
};
// If using separately from AddCardTrigger, wrap into element with addCardTriggerContainer class
export const AddCardTriggerButton = function ({ onClick }) {
    return React.createElement(Button, { icon: "plus", onClick: onClick, className: styles.addCardTrigger });
};
export const SimpleEditableCard = function (props) {
    return (React.createElement(Card, { className: `
          ${styles.editableCard}
          ${props.selected ? styles.editableCardSelected : ''}
          ${props.extended ? styles.editableCardExtended : ''}
          ${props.onSelect ? styles.editableCardSelectable : ''}
          ${props.onDelete ? styles.editableCardDeletable : ''}
        `, onClick: props.onSelect },
        React.createElement(Text, { ellipsize: true }, props.children),
        props.onDelete
            ? React.createElement(Button, { onClick: (evt) => {
                    props.onDelete ? props.onDelete() : void 0;
                    evt.stopPropagation();
                    return false;
                }, intent: "danger", icon: "cross", className: styles.editableCardDeleteButton, minimal: true, small: true })
            : ''));
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvcmVuZGVyZXIvd2lkZ2V0cy9lZGl0YWJsZS1jYXJkLWxpc3QvaW5kZXgudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sS0FBSyxNQUFNLE9BQU8sQ0FBQztBQUMxQixPQUFPLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUN2RCxPQUFPLE1BQU0sTUFBTSxlQUFlLENBQUM7QUFHbkMsTUFBTSxDQUFDLE1BQU0sY0FBYyxHQUFxRCxVQUFVLEVBQUUsT0FBTyxFQUFFO0lBQ25HLE9BQU8sQ0FDTCw2QkFBSyxTQUFTLEVBQUUsTUFBTSxDQUFDLHVCQUF1QjtRQUM1QyxvQkFBQyxvQkFBb0IsSUFBQyxPQUFPLEVBQUUsT0FBTyxHQUFJLENBQ3RDLENBQ1AsQ0FBQztBQUNKLENBQUMsQ0FBQztBQUdGLGdHQUFnRztBQUNoRyxNQUFNLENBQUMsTUFBTSxvQkFBb0IsR0FBcUQsVUFBVSxFQUFFLE9BQU8sRUFBRTtJQUN6RyxPQUFPLG9CQUFDLE1BQU0sSUFBQyxJQUFJLEVBQUMsTUFBTSxFQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sQ0FBQyxjQUFjLEdBQUksQ0FBQztBQUNwRixDQUFDLENBQUM7QUFTRixNQUFNLENBQUMsTUFBTSxrQkFBa0IsR0FBc0MsVUFBVSxLQUFLO0lBQ2xGLE9BQU8sQ0FDTCxvQkFBQyxJQUFJLElBQ0QsU0FBUyxFQUFFO1lBQ1AsTUFBTSxDQUFDLFlBQVk7WUFDbkIsS0FBSyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLG9CQUFvQixDQUFDLENBQUMsQ0FBQyxFQUFFO1lBQ2pELEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDLENBQUMsRUFBRTtZQUNqRCxLQUFLLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsc0JBQXNCLENBQUMsQ0FBQyxDQUFDLEVBQUU7WUFDbkQsS0FBSyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLHFCQUFxQixDQUFDLENBQUMsQ0FBQyxFQUFFO1NBQ3JELEVBQ0QsT0FBTyxFQUFFLEtBQUssQ0FBQyxRQUFRO1FBRXpCLG9CQUFDLElBQUksSUFBQyxTQUFTLEVBQUUsSUFBSSxJQUNsQixLQUFLLENBQUMsUUFBUSxDQUNWO1FBRU4sS0FBSyxDQUFDLFFBQVE7WUFDYixDQUFDLENBQUMsb0JBQUMsTUFBTSxJQUNMLE9BQU8sRUFBRSxDQUFDLEdBQVEsRUFBRSxFQUFFO29CQUNwQixLQUFLLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDO29CQUMzQyxHQUFHLENBQUMsZUFBZSxFQUFFLENBQUM7b0JBQ3RCLE9BQU8sS0FBSyxDQUFDO2dCQUNmLENBQUMsRUFDRCxNQUFNLEVBQUMsUUFBUSxFQUNmLElBQUksRUFBQyxPQUFPLEVBQ1osU0FBUyxFQUFFLE1BQU0sQ0FBQyx3QkFBd0IsRUFDMUMsT0FBTyxFQUFFLElBQUksRUFDYixLQUFLLEVBQUUsSUFBSSxHQUNYO1lBQ0osQ0FBQyxDQUFDLEVBQUUsQ0FFRCxDQUNSLENBQUM7QUFDSixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgQ2FyZCwgVGV4dCwgQnV0dG9uIH0gZnJvbSAnQGJsdWVwcmludGpzL2NvcmUnO1xuaW1wb3J0IHN0eWxlcyBmcm9tICcuL3N0eWxlcy5zY3NzJztcblxuXG5leHBvcnQgY29uc3QgQWRkQ2FyZFRyaWdnZXI6IFJlYWN0LkZDPHsgb25DbGljaz86ICguLi5hcmdzOiBhbnlbXSkgPT4gdm9pZCB9PiA9IGZ1bmN0aW9uICh7IG9uQ2xpY2sgfSkge1xuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMuYWRkQ2FyZFRyaWdnZXJDb250YWluZXJ9PlxuICAgICAgPEFkZENhcmRUcmlnZ2VyQnV0dG9uIG9uQ2xpY2s9e29uQ2xpY2t9IC8+XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG5cbi8vIElmIHVzaW5nIHNlcGFyYXRlbHkgZnJvbSBBZGRDYXJkVHJpZ2dlciwgd3JhcCBpbnRvIGVsZW1lbnQgd2l0aCBhZGRDYXJkVHJpZ2dlckNvbnRhaW5lciBjbGFzc1xuZXhwb3J0IGNvbnN0IEFkZENhcmRUcmlnZ2VyQnV0dG9uOiBSZWFjdC5GQzx7IG9uQ2xpY2s/OiAoLi4uYXJnczogYW55W10pID0+IHZvaWQgfT4gPSBmdW5jdGlvbiAoeyBvbkNsaWNrIH0pIHtcbiAgcmV0dXJuIDxCdXR0b24gaWNvbj1cInBsdXNcIiBvbkNsaWNrPXtvbkNsaWNrfSBjbGFzc05hbWU9e3N0eWxlcy5hZGRDYXJkVHJpZ2dlcn0gLz47XG59O1xuXG5cbmludGVyZmFjZSBTaW1wbGVFZGl0YWJsZUNhcmRQcm9wcyB7XG4gIHNlbGVjdGVkPzogYm9vbGVhbixcbiAgb25EZWxldGU/OiAoKSA9PiB2b2lkLFxuICBvblNlbGVjdD86ICgpID0+IHZvaWQgXG4gIGV4dGVuZGVkPzogYm9vbGVhbjtcbn1cbmV4cG9ydCBjb25zdCBTaW1wbGVFZGl0YWJsZUNhcmQ6IFJlYWN0LkZDPFNpbXBsZUVkaXRhYmxlQ2FyZFByb3BzPiA9IGZ1bmN0aW9uIChwcm9wcykge1xuICByZXR1cm4gKFxuICAgIDxDYXJkXG4gICAgICAgIGNsYXNzTmFtZT17YFxuICAgICAgICAgICR7c3R5bGVzLmVkaXRhYmxlQ2FyZH1cbiAgICAgICAgICAke3Byb3BzLnNlbGVjdGVkID8gc3R5bGVzLmVkaXRhYmxlQ2FyZFNlbGVjdGVkIDogJyd9XG4gICAgICAgICAgJHtwcm9wcy5leHRlbmRlZCA/IHN0eWxlcy5lZGl0YWJsZUNhcmRFeHRlbmRlZCA6ICcnfVxuICAgICAgICAgICR7cHJvcHMub25TZWxlY3QgPyBzdHlsZXMuZWRpdGFibGVDYXJkU2VsZWN0YWJsZSA6ICcnfVxuICAgICAgICAgICR7cHJvcHMub25EZWxldGUgPyBzdHlsZXMuZWRpdGFibGVDYXJkRGVsZXRhYmxlIDogJyd9XG4gICAgICAgIGB9XG4gICAgICAgIG9uQ2xpY2s9e3Byb3BzLm9uU2VsZWN0fT5cblxuICAgICAgPFRleHQgZWxsaXBzaXplPXt0cnVlfT5cbiAgICAgICAge3Byb3BzLmNoaWxkcmVufVxuICAgICAgPC9UZXh0PlxuXG4gICAgICB7cHJvcHMub25EZWxldGVcbiAgICAgICAgPyA8QnV0dG9uXG4gICAgICAgICAgICBvbkNsaWNrPXsoZXZ0OiBhbnkpID0+IHtcbiAgICAgICAgICAgICAgcHJvcHMub25EZWxldGUgPyBwcm9wcy5vbkRlbGV0ZSgpIDogdm9pZCAwO1xuICAgICAgICAgICAgICBldnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH19XG4gICAgICAgICAgICBpbnRlbnQ9XCJkYW5nZXJcIlxuICAgICAgICAgICAgaWNvbj1cImNyb3NzXCJcbiAgICAgICAgICAgIGNsYXNzTmFtZT17c3R5bGVzLmVkaXRhYmxlQ2FyZERlbGV0ZUJ1dHRvbn1cbiAgICAgICAgICAgIG1pbmltYWw9e3RydWV9XG4gICAgICAgICAgICBzbWFsbD17dHJ1ZX1cbiAgICAgICAgICAvPlxuICAgICAgICA6ICcnfVxuXG4gICAgPC9DYXJkPlxuICApO1xufTtcbiJdfQ==