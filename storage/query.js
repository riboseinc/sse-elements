export class QuerySet {
    constructor(index, order = sortAlphabeticallyAscending, items = undefined, ordered = false) {
        this.index = index;
        this.items = items === undefined ? Object.entries(index) : items;
        this.order = order;
        this._ordered = ordered;
    }
    get(id) {
        return this.index[id];
    }
    add(obj) {
        this.index[obj.id] = obj;
    }
    orderBy(comparison) {
        return new QuerySet(this.index, this.order, [...this.items].sort(comparison), true);
    }
    filter(func) {
        return new QuerySet(this.index, this.order, this.items.filter(func), this._ordered);
    }
    all() {
        return this._ordered
            ? this.items.map(item => item[1])
            : this.orderBy(this.order).items.map(item => item[1]);
    }
}
export const sortAlphabeticallyAscending = function (a, b) {
    return a[0].localeCompare(b[0]);
};
export const sortIntegerDescending = function (a, b) {
    return parseInt(b[0], 10) - parseInt(a[0], 10);
};
export const sortIntegerAscending = function (a, b) {
    return parseInt(a[0], 10) - parseInt(b[0], 10);
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXVlcnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvc3RvcmFnZS9xdWVyeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFNQSxNQUFNLE9BQU8sUUFBUTtJQU1uQixZQUNJLEtBQWUsRUFDZixRQUFxQiwyQkFBMkIsRUFDaEQsUUFBbUMsU0FBUyxFQUM1QyxPQUFPLEdBQUcsS0FBSztRQUNqQixJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztRQUNuQixJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssS0FBSyxTQUFTLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQztRQUNqRSxJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztRQUNuQixJQUFJLENBQUMsUUFBUSxHQUFHLE9BQU8sQ0FBQztJQUMxQixDQUFDO0lBQ0QsR0FBRyxDQUFDLEVBQVU7UUFDWixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDeEIsQ0FBQztJQUNELEdBQUcsQ0FBQyxHQUFNO1FBQ1IsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsR0FBRyxDQUFDO0lBQzNCLENBQUM7SUFDRCxPQUFPLENBQUMsVUFBdUI7UUFDN0IsT0FBTyxJQUFJLFFBQVEsQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDdEYsQ0FBQztJQUNELE1BQU0sQ0FBQyxJQUFvQztRQUN6QyxPQUFPLElBQUksUUFBUSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsRUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDdEYsQ0FBQztJQUNELEdBQUc7UUFDRCxPQUFPLElBQUksQ0FBQyxRQUFRO1lBQ2xCLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNqQyxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFELENBQUM7Q0FDRjtBQUlELE1BQU0sQ0FBQyxNQUFNLDJCQUEyQixHQUFnQixVQUFVLENBQUMsRUFBRSxDQUFDO0lBQ3BFLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNsQyxDQUFDLENBQUE7QUFDRCxNQUFNLENBQUMsTUFBTSxxQkFBcUIsR0FBZ0IsVUFBVSxDQUFvQixFQUFFLENBQW9CO0lBQ3BHLE9BQU8sUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsR0FBRyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0FBQ2pELENBQUMsQ0FBQTtBQUNELE1BQU0sQ0FBQyxNQUFNLG9CQUFvQixHQUFnQixVQUFVLENBQW9CLEVBQUUsQ0FBb0I7SUFDbkcsT0FBTyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxHQUFHLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7QUFDakQsQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGludGVyZmFjZSBJbmRleGFibGVPYmplY3QgeyBpZDogc3RyaW5nIHwgbnVtYmVyLCBba2V5OiBzdHJpbmddOiBhbnkgfVxuXG5leHBvcnQgaW50ZXJmYWNlIEluZGV4PFQgZXh0ZW5kcyBJbmRleGFibGVPYmplY3Q+IHsgW2lkOiBzdHJpbmddOiBUIH1cblxuaW50ZXJmYWNlIEFycmF5U29ydGVyIHsgKGE6IFtzdHJpbmcsIHVua25vd25dLCBiOiBbc3RyaW5nLCB1bmtub3duXSk6IG51bWJlciB9XG5cbmV4cG9ydCBjbGFzcyBRdWVyeVNldDxUIGV4dGVuZHMgSW5kZXhhYmxlT2JqZWN0PiB7XG4gIGluZGV4OiBJbmRleDxUPjtcbiAgb3JkZXI6IEFycmF5U29ydGVyO1xuICBpdGVtczogW3N0cmluZywgVF1bXTtcbiAgX29yZGVyZWQ6IGJvb2xlYW47XG5cbiAgY29uc3RydWN0b3IoXG4gICAgICBpbmRleDogSW5kZXg8VD4sXG4gICAgICBvcmRlcjogQXJyYXlTb3J0ZXIgPSBzb3J0QWxwaGFiZXRpY2FsbHlBc2NlbmRpbmcsXG4gICAgICBpdGVtczogW3N0cmluZywgVF1bXSB8IHVuZGVmaW5lZCA9IHVuZGVmaW5lZCxcbiAgICAgIG9yZGVyZWQgPSBmYWxzZSkge1xuICAgIHRoaXMuaW5kZXggPSBpbmRleDtcbiAgICB0aGlzLml0ZW1zID0gaXRlbXMgPT09IHVuZGVmaW5lZCA/IE9iamVjdC5lbnRyaWVzKGluZGV4KSA6IGl0ZW1zO1xuICAgIHRoaXMub3JkZXIgPSBvcmRlcjtcbiAgICB0aGlzLl9vcmRlcmVkID0gb3JkZXJlZDtcbiAgfVxuICBnZXQoaWQ6IHN0cmluZyk6IFQge1xuICAgIHJldHVybiB0aGlzLmluZGV4W2lkXTtcbiAgfVxuICBhZGQob2JqOiBUKTogdm9pZCB7XG4gICAgdGhpcy5pbmRleFtvYmouaWRdID0gb2JqO1xuICB9XG4gIG9yZGVyQnkoY29tcGFyaXNvbjogQXJyYXlTb3J0ZXIpIHtcbiAgICByZXR1cm4gbmV3IFF1ZXJ5U2V0KHRoaXMuaW5kZXgsIHRoaXMub3JkZXIsIFsuLi50aGlzLml0ZW1zXS5zb3J0KGNvbXBhcmlzb24pLCB0cnVlKTtcbiAgfVxuICBmaWx0ZXIoZnVuYzogKGl0ZW06IFtzdHJpbmcsIFRdKSA9PiBib29sZWFuKSB7XG4gICAgcmV0dXJuIG5ldyBRdWVyeVNldCh0aGlzLmluZGV4LCB0aGlzLm9yZGVyLCB0aGlzLml0ZW1zLmZpbHRlcihmdW5jKSwgdGhpcy5fb3JkZXJlZCk7XG4gIH1cbiAgYWxsKCkge1xuICAgIHJldHVybiB0aGlzLl9vcmRlcmVkXG4gICAgICA/IHRoaXMuaXRlbXMubWFwKGl0ZW0gPT4gaXRlbVsxXSlcbiAgICAgIDogdGhpcy5vcmRlckJ5KHRoaXMub3JkZXIpLml0ZW1zLm1hcChpdGVtID0+IGl0ZW1bMV0pO1xuICB9XG59XG5cblxuXG5leHBvcnQgY29uc3Qgc29ydEFscGhhYmV0aWNhbGx5QXNjZW5kaW5nOiBBcnJheVNvcnRlciA9IGZ1bmN0aW9uIChhLCBiKSB7XG4gIHJldHVybiBhWzBdLmxvY2FsZUNvbXBhcmUoYlswXSk7XG59XG5leHBvcnQgY29uc3Qgc29ydEludGVnZXJEZXNjZW5kaW5nOiBBcnJheVNvcnRlciA9IGZ1bmN0aW9uIChhOiBbc3RyaW5nLCB1bmtub3duXSwgYjogW3N0cmluZywgdW5rbm93bl0pOiBudW1iZXIge1xuICByZXR1cm4gcGFyc2VJbnQoYlswXSwgMTApIC0gcGFyc2VJbnQoYVswXSwgMTApO1xufVxuZXhwb3J0IGNvbnN0IHNvcnRJbnRlZ2VyQXNjZW5kaW5nOiBBcnJheVNvcnRlciA9IGZ1bmN0aW9uIChhOiBbc3RyaW5nLCB1bmtub3duXSwgYjogW3N0cmluZywgdW5rbm93bl0pOiBudW1iZXIge1xuICByZXR1cm4gcGFyc2VJbnQoYVswXSwgMTApIC0gcGFyc2VJbnQoYlswXSwgMTApO1xufVxuIl19