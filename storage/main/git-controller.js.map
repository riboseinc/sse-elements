{"version":3,"file":"git-controller.js","sourceRoot":"","sources":["../../../src/storage/main/git-controller.ts"],"names":[],"mappings":"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","sourcesContent":["import * as path from 'path';\nimport * as fs from 'fs-extra';\nimport * as git from 'isomorphic-git';\n\nimport { ipcMain } from 'electron';\n\nimport { makeEndpoint } from 'api/main';\nimport { Setting, manager as settings } from 'settings/main';\nimport { WindowOpenerParams, openWindow } from 'main/window';\n\nimport { GitAuthor, GitAuthentication } from '../git';\n\n\nsettings.configurePane({\n  id: 'dataSync',\n  label: \"Data synchronization\",\n  icon: 'git-merge',\n});\nsettings.register(new Setting<string>(\n  'gitRepoUrl',\n  \"Git repository URL\",\n  'dataSync',\n));\n\n\nexport class GitController {\n  private auth: GitAuthentication = {};\n\n  constructor(\n      private fs: any,\n      private repoUrl: string,\n      private workDir: string,\n      private corsProxy: string) {\n\n    git.plugins.set('fs', fs);\n  }\n\n  async getAuthor(): Promise<GitAuthor> {\n    const name = await git.config({ dir: this.workDir, path: 'user.name' });\n    const email = await git.config({ dir: this.workDir, path: 'user.email' });\n    return { name: name, email: email };\n  }\n\n  async setAuthor(author: GitAuthor) {\n    await git.config({ dir: this.workDir, path: 'user.name', value: author.name });\n    await git.config({ dir: this.workDir, path: 'user.email', value: author.email });\n  }\n\n  async setAuth(auth: GitAuthentication): Promise<boolean> {\n    try {\n      // Try fetching with auth; will throw if auth is invalid\n      git.fetch({dir: this.workDir, ...auth });\n    } catch (e) {\n      return false;\n    }\n\n    this.auth = auth;\n    return true;\n  }\n\n  async isInitialized(): Promise<boolean> {\n    let gitInitialized: boolean;\n\n    try {\n      gitInitialized = (await this.fs.stat(path.join(this.workDir, '.git'))).isDirectory();\n    } catch (e) {\n      gitInitialized = false;\n    }\n\n    return gitInitialized;\n  }\n\n  async getOriginUrl(): Promise<string | null> {\n    return ((await git.listRemotes({\n      dir: this.workDir,\n    })).find(r => r.remote === 'origin') || { url: null }).url;\n  }\n\n  async getUpstreamUrl(): Promise<string | null> {\n    return ((await git.listRemotes({\n      dir: this.workDir,\n    })).find(r => r.remote === 'upstream') || { url: null }).url;\n  }\n\n  async addAllChanges() {\n    await git.add({\n      dir: this.workDir,\n      filepath: '.',\n    });\n  }\n\n  async listChangedFiles(): Promise<string[]> {\n    const FILE = 0, HEAD = 1, WORKDIR = 2;\n\n    return (await git.statusMatrix({ dir: this.workDir }))\n      .filter(row => row[HEAD] !== row[WORKDIR])\n      .map(row => row[FILE]);\n  }\n\n  async pull() {\n    await git.pull({\n      dir: this.workDir,\n      ref: 'master',\n      singleBranch: true,\n      fastForwardOnly: true,\n      ...this.auth,\n    });\n  }\n\n  async commit(msg: string) {\n    await git.commit({\n      dir: this.workDir,\n      message: msg,\n      author: {},\n    });\n  }\n\n  async push() {\n    await git.push({\n      dir: this.workDir,\n      remote: 'origin',\n      ...this.auth,\n    });\n  }\n\n  async reset() {\n    await this.fs.remove(this.workDir);\n    await this.fs.ensureDir(this.workDir);\n    await git.clone({\n      dir: this.workDir,\n      url: this.repoUrl,\n      ref: 'master',\n      singleBranch: true,\n      depth: 10,\n      corsProxy: this.corsProxy,\n      ...this.auth,\n    });\n  }\n\n  setUpAPIEndpoints() {\n\n    makeEndpoint<{ originURL: string | null, author: GitAuthor }>('git-config', async () => {\n      return {\n        originURL: await this.getOriginUrl(),\n        author: await this.getAuthor(),\n      };\n    });\n\n    makeEndpoint<{ errors: string[] }>('fetch-commit-push', async ({\n        commitMsg,\n        authorName,\n        authorEmail,\n        gitUsername,\n        gitPassword,\n      }: {\n        commitMsg: string,\n        authorName: string,\n        authorEmail: string,\n        gitUsername: string,\n        gitPassword: string\n      }) => {\n\n      await this.setAuthor({ name: authorName, email: authorEmail });\n\n      try {\n        await this.setAuth({ username: gitUsername, password: gitPassword });\n      } catch (e) {\n        return { errors: [`Error while authenticating: ${e.toString()}`] };\n      }\n\n      try {\n        await this.pull();\n      } catch (e) {\n        return { errors: [`Error while fetching and merging changes: ${e.toString()}`] };\n      }\n\n      const changedFiles = await this.listChangedFiles();\n      if (changedFiles.length < 1) {\n        return { errors: [\"No changes to submit!\"] };\n      }\n\n      await this.addAllChanges();\n      await this.commit(commitMsg);\n\n      try {\n        await this.push();\n      } catch (e) {\n        return { errors: [`Error while pushing changes: ${e.toString()}`] };\n      }\n\n      return { errors: [] };\n    });\n\n  }\n}\n\n\nexport async function initRepo(\n    workDir: string,\n    repoUrl: string,\n    corsProxyUrl: string): Promise<GitController> {\n\n  const gitCtrl = new GitController(fs, repoUrl, workDir, corsProxyUrl);\n\n  if ((await gitCtrl.isInitialized()) === true) {\n    const remoteUrl = await gitCtrl.getOriginUrl();\n    if (remoteUrl !== null && remoteUrl.trim() === repoUrl.trim()) {\n      await gitCtrl.pull();\n    } else {\n      await gitCtrl.reset();\n    }\n  } else {\n    await gitCtrl.reset();\n  }\n\n  return gitCtrl;\n}\n\n\n/* Promises to return a string containing configured repository URL.\n   If repository URL is not configured (e.g., on first run, or after reset)\n   opens a window with specified options.\n   The window is expected to ask the user to specify the URL and send a `'set-setting'`\n   event for `'gitRepoUrl'`. */\nexport async function setRepoUrl(configWindow: WindowOpenerParams): Promise<string> {\n  const repoUrl: string = await settings.getValue('gitRepoUrl') as string;\n\n  return new Promise<string>(async (resolve, reject) => {\n    if (!repoUrl) {\n      await openWindow(configWindow);\n      ipcMain.on('set-setting', handleSetting);\n\n      function handleSetting(evt: any, name: string, value: string) {\n        if (name === 'gitRepoUrl') {\n          ipcMain.removeListener('set-setting', handleSetting);\n          resolve(value);\n        }\n        evt.reply('ok');\n      }\n    } else {\n      resolve(repoUrl);\n    }\n  });\n}\n"]}