import { listen } from '../../api/main';
export function provideAll(storage, contentTypeName) {
    return listen(`storage-read-all-${contentTypeName}`, async () => {
        return await storage[contentTypeName].getIndex();
    });
}
// provideModified(mainStorage, ctypename) can only be called if mainStorage[ctypename] is a GitFilesystemStore.
export function provideModified(storage, contentTypeName) {
    return listen(`storage-read-modified-in-${contentTypeName}`, async () => {
        const store = storage[contentTypeName];
        return await store.listIDsWithUncommittedChanges();
    });
}
export function provideOne(storage, contentTypeName) {
    return listen(`storage-read-one-in-${contentTypeName}`, async ({ objectId }) => {
        return await storage[contentTypeName].read(objectId);
    });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBpLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3N0b3JhZ2UvbWFpbi9hcGkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBSUEsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBSXhDLE1BQU0sVUFBVSxVQUFVLENBQ3pCLE9BQXVCLEVBQUUsZUFBMEI7SUFDbEQsT0FBTyxNQUFNLENBQ1osb0JBQW9CLGVBQWUsRUFBRSxFQUFFLEtBQUssSUFBSSxFQUFFO1FBQ2pELE9BQU8sTUFBTSxPQUFPLENBQUMsZUFBZSxDQUFDLENBQUMsUUFBUSxFQUFFLENBQUM7SUFDbkQsQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDO0FBR0QsZ0hBQWdIO0FBQ2hILE1BQU0sVUFBVSxlQUFlLENBQzlCLE9BQTJFLEVBQUUsZUFBMEI7SUFDdEcsT0FBTyxNQUFNLENBQ1osNEJBQTRCLGVBQWUsRUFBRSxFQUFFLEtBQUssSUFBSSxFQUFFO1FBQ3pELE1BQU0sS0FBSyxHQUFHLE9BQU8sQ0FBQyxlQUFlLENBQWlELENBQUM7UUFDdkYsT0FBTyxNQUFNLEtBQUssQ0FBQyw2QkFBNkIsRUFBRSxDQUFDO0lBQ3JELENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQztBQUdELE1BQU0sVUFBVSxVQUFVLENBQ3pCLE9BQXVCLEVBQUUsZUFBMEI7SUFDbEQsT0FBTyxNQUFNLENBQ1osdUJBQXVCLGVBQWUsRUFBRSxFQUFFLEtBQUssRUFBRSxFQUFFLFFBQVEsRUFBRSxFQUFFLEVBQUU7UUFDaEUsT0FBTyxNQUFNLE9BQU8sQ0FBQyxlQUFlLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDdkQsQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy9pbXBvcnQgeyBTdG9yZSB9IGZyb20gJy4vc3RvcmUvYmFzZSc7XG5pbXBvcnQgeyBJbmRleCB9IGZyb20gJy4uL3F1ZXJ5JztcbmltcG9ydCB7IE1haW5TdG9yYWdlIH0gZnJvbSAnLic7XG5pbXBvcnQgeyBTdG9yYWdlIH0gZnJvbSAnLi4nO1xuaW1wb3J0IHsgbGlzdGVuIH0gZnJvbSAnLi4vLi4vYXBpL21haW4nO1xuaW1wb3J0IHsgVmVyc2lvbmVkU3RvcmUgfSBmcm9tICcuL3N0b3JlL2Jhc2UnO1xuXG5cbmV4cG9ydCBmdW5jdGlvbiBwcm92aWRlQWxsPENUeXBlTmFtZSBleHRlbmRzIGtleW9mIFMsIFMgZXh0ZW5kcyBTdG9yYWdlPlxuKHN0b3JhZ2U6IE1haW5TdG9yYWdlPFM+LCBjb250ZW50VHlwZU5hbWU6IENUeXBlTmFtZSkge1xuICByZXR1cm4gbGlzdGVuPHt9LCBJbmRleDxTW0NUeXBlTmFtZV0+PlxuICAoYHN0b3JhZ2UtcmVhZC1hbGwtJHtjb250ZW50VHlwZU5hbWV9YCwgYXN5bmMgKCkgPT4ge1xuICAgIHJldHVybiBhd2FpdCBzdG9yYWdlW2NvbnRlbnRUeXBlTmFtZV0uZ2V0SW5kZXgoKTtcbiAgfSk7XG59XG5cblxuLy8gcHJvdmlkZU1vZGlmaWVkKG1haW5TdG9yYWdlLCBjdHlwZW5hbWUpIGNhbiBvbmx5IGJlIGNhbGxlZCBpZiBtYWluU3RvcmFnZVtjdHlwZW5hbWVdIGlzIGEgR2l0RmlsZXN5c3RlbVN0b3JlLlxuZXhwb3J0IGZ1bmN0aW9uIHByb3ZpZGVNb2RpZmllZDxDVHlwZU5hbWUgZXh0ZW5kcyBrZXlvZiBTLCBNIGV4dGVuZHMgTWFpblN0b3JhZ2U8Uz4sIFMgZXh0ZW5kcyBTdG9yYWdlPlxuKHN0b3JhZ2U6IE1bQ1R5cGVOYW1lXSBleHRlbmRzIFZlcnNpb25lZFN0b3JlPFNbQ1R5cGVOYW1lXSwgYW55PiA/IE0gOiBuZXZlciwgY29udGVudFR5cGVOYW1lOiBDVHlwZU5hbWUpIHtcbiAgcmV0dXJuIGxpc3Rlbjx7fSwgYW55W10+XG4gIChgc3RvcmFnZS1yZWFkLW1vZGlmaWVkLWluLSR7Y29udGVudFR5cGVOYW1lfWAsIGFzeW5jICgpID0+IHtcbiAgICBjb25zdCBzdG9yZSA9IHN0b3JhZ2VbY29udGVudFR5cGVOYW1lXSBhcyB1bmtub3duIGFzIFZlcnNpb25lZFN0b3JlPFNbQ1R5cGVOYW1lXSwgYW55PjtcbiAgICByZXR1cm4gYXdhaXQgc3RvcmUubGlzdElEc1dpdGhVbmNvbW1pdHRlZENoYW5nZXMoKTtcbiAgfSk7XG59XG5cblxuZXhwb3J0IGZ1bmN0aW9uIHByb3ZpZGVPbmU8Q1R5cGVOYW1lIGV4dGVuZHMga2V5b2YgUywgUyBleHRlbmRzIFN0b3JhZ2U+XG4oc3RvcmFnZTogTWFpblN0b3JhZ2U8Uz4sIGNvbnRlbnRUeXBlTmFtZTogQ1R5cGVOYW1lKSB7XG4gIHJldHVybiBsaXN0ZW48eyBvYmplY3RJZDogU1tDVHlwZU5hbWVdW1wiaWRcIl0gfSwgSW5kZXg8U1tDVHlwZU5hbWVdPj5cbiAgKGBzdG9yYWdlLXJlYWQtb25lLWluLSR7Y29udGVudFR5cGVOYW1lfWAsIGFzeW5jICh7IG9iamVjdElkIH0pID0+IHtcbiAgICByZXR1cm4gYXdhaXQgc3RvcmFnZVtjb250ZW50VHlwZU5hbWVdLnJlYWQob2JqZWN0SWQpO1xuICB9KTtcbn1cbiJdfQ==