{"version":3,"file":"renderer.js","sourceRoot":"","sources":["../../src/settings/renderer.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,UAAU,CAAC;AACvC,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AAG5C,MAAM,UAAU,UAAU,CAAI,IAAY,EAAE,YAAe;IACzD,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,QAAQ,CAAC,YAAY,CAAC,CAAC;IAEjD,SAAS,CAAC,GAAG,EAAE;QACb,WAAW,CAAC,IAAI,CAAC,aAAa,EAAE,qBAAqB,CAAC,CAAC;QACvD,OAAO,SAAS,OAAO;YACrB,WAAW,CAAC,cAAc,CAAC,aAAa,EAAE,qBAAqB,CAAC,CAAC;QACnE,CAAC,CAAA;IACH,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,SAAS,qBAAqB,CAAC,GAAQ,EAAE,KAAU;QACjD,QAAQ,CAAC,KAAU,CAAC,CAAC;IACvB,CAAC;IAED,KAAK,UAAU,MAAM;QACnB,MAAM,WAAW,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;IACrD,CAAC;IAED,OAAO;QACL,KAAK,EAAE,KAAK;QACZ,GAAG,EAAE,QAAQ;QACb,MAAM,EAAE,MAAM;KACf,CAAC;AACJ,CAAC","sourcesContent":["import { ipcRenderer } from 'electron';\nimport { useEffect, useState } from 'react';\n\n\nexport function useSetting<T>(name: string, initialValue: T) {\n  const [value, setValue] = useState(initialValue);\n\n  useEffect(() => {\n    ipcRenderer.once('get-setting', handleSettingResponse);\n    return function cleanup() {\n      ipcRenderer.removeListener('get-setting', handleSettingResponse);\n    }\n  }, []);\n\n  function handleSettingResponse(evt: any, value: any) {\n    setValue(value as T);\n  }\n\n  async function commit() {\n    await ipcRenderer.send('set-setting', name, value);\n  }\n\n  return {\n    value: value,\n    set: setValue,\n    commit: commit,\n  };\n}\n"]}